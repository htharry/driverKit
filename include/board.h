#ifndef __BOARD_H__#define __BOARD_H__#include "va_kern_pub.h"#include "va_chan_base.h"#include "board_def.h"// memory typeenum{    VA_MEM_TYPE_FDD          = 1,};struct tagBoardCfg;typedef struct tagVaMemDev{    VA_DEV_S stDev;    U32      u32BlkSize;    U32      u32TotSize;    VOID     *pMemAddr;}VA_MEM_DEV_S;typedef struct tagVaBoardDev{    VA_DEV_S stDev;    struct tagBoardCfg *pstBoardCfg;}VA_BOARD_DEV_S;typedef struct tagBoardChanCfg{    U16 u16TotChanNum;    U16 u16PortNum;    U16 u16ChanNumPerPort;}BOARD_CHAN_CFG_S;typedef struct tagBoardCfg{    U32 u32BoardSeries;    U32 u32BoardId;    const char *szName;    VA_CHAN_DEV_S *pstChanDevTbl;    VA_MEM_DEV_S  *pstMemDevTbl;}BOARD_CFG_S;

typedef struct tagBoardInfo{    BOARD_CHAN_CFG_S astChanCfgTbl[VA_CHAN_TYPE_NUM];    BOARD_CFG_S      *pstBoardCfg;}BOARD_INFO_S;
extern void VA_DispMemDev(VA_DEV_S *pstDev, ULONG ulExecId);extern void BOARD_GetChanCfg(U16 u16ChanType, BOARD_CHAN_CFG_S *pstChanCfg);extern U32  BOARD_GetLocTotChanNum(U16 u16ChanType);extern void BOARD_RegChanDevs(BOARD_CFG_S *pstBoardCfg);extern void BOARD_UnRegChanDevs(BOARD_CFG_S *pstBoardCfg);extern void BOARD_RegMemDevs(BOARD_CFG_S *pstBoardCfg);extern void BOARD_UnRegMemDevs(BOARD_CFG_S *pstBoardCfg);#endif //__BOARD_H__